<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 독타입.. 중복이여서는 안된다 -->
<!--파일을 고유하게 이름짓는 것 namespace testMapper1의 이름을 줘야한다 패키지명 같이 줘야한다  -->
<!-- dao 클래스 위치 ctrl 키 눌러서 경로 확인되는지 .. check-->
<mapper namespace="kr.co.bitcomu.repository.dao.AdminDAO">

	<!-- 페이징 처리 시작 -->

	<sql id="pagingStart">
	  	    select *
	      from (select rownum rnum, a.*
			      from ( 
	</sql>
	<sql id="pagingEnd">
	  )
			    a)
		 where rnum between #{page.begin} and #{page.end}
	</sql>
	
	<!-- 페이징 처리 끝 -->
	
	<!-- 전체 게시판 조회를 위한 쿼리 -->

	<sql id="selectStudy">
		select s.user_no, s.study_post_no as post_no, (select user_id  from tb_user u
                    		where u.user_no = s.user_no ) user_id, 
                    		(select user_name  from tb_user u
                    		where u.user_no = s.user_no ) user_name,
		 s.study_reg_dt as reg_dt, s.study_post_title as post_title,
		 				s.study_post_content as post_content, null as subject,
                     (select code_name from tb_codenm where code_name='스터디게시판') code_name
                from tb_study s 
	</sql>
	
	<sql id="selectVote">
		select v.user_no, v.vote_no as post_no, (select user_id  from tb_user u
                    		where u.user_no = v.user_no ) user_id,
                    		(select user_name  from tb_user u
                    		where u.user_no = v.user_no ) user_name,
                    		 v.vote_reg_dt as reg_dt, v.vote_title as post_title,
                    		 v.vote_content as post_content, null as subject,
                     (select code_name from tb_codenm where code_name='투표게시판') code_name
                from tb_vote v
	</sql>
	
	<sql id="selectNotice">
		select n.user_no, n.notice_post_no as post_no, (select user_id  from tb_user u
                    	where u.user_no = n.user_no ) user_id,
                    	(select user_name  from tb_user u
                    		where u.user_no = n.user_no ) user_name,
		 				n.notice_reg_dt as reg_dt, n.notice_post_title as post_title,
		 				n.notice_post_content as post_content, null as subject,
                     (select code_name from tb_codenm where code_name='공지게시판') code_name
                from tb_notice n
	</sql>
	
	<sql id="selectTeam">
		select t.user_no, t.team_board_no as post_no, (select user_id  from tb_user u
                    	where u.user_no = t.user_no ) user_id,
                    	(select user_name  from tb_user u
                    		where u.user_no = t.user_no ) user_name,
		 				t.team_board_reg_dt as reg_dt, t.team_board_title as post_title,
		 				t.team_board_content as post_content, null as subject,
                     (select code_name from tb_codenm where code_name='팀프로젝트게시판') code_name
                from tb_team t
	</sql>
	
	<sql id="selectYoutube">
		select y.user_no, y.yt_no as post_no, (select user_id  from tb_user u
                    	where u.user_no = y.user_no ) user_id,
                    	(select user_name  from tb_user u
                    		where u.user_no = y.user_no ) user_name,
		 				y.yt_reg_dt as reg_dt, y.yt_title as post_title, y.yt_content as post_content,
		 				y.yt_subject as subject,
                     (select code_name from tb_codenm where code_name='온라인강의게시판') code_name
                from tb_youtube y
	</sql>
	
	<sql id="selectQna">
		select q.user_no, q.qna_no as post_no, (select user_id  from tb_user u
                    	where u.user_no = q.user_no ) user_id,
                    	(select user_name  from tb_user u
                    		where u.user_no = q.user_no ) user_name,
		 				q.qna_reg_dt as reg_dt, q.qna_title as post_title, q.qna_content as post_content, null as subject,
                     (select code_name from tb_codenm where code_name='질문답변게시판') code_name
                from tb_qna q
	</sql>
	
	<sql id="selectTalk">
		select tk.user_no, tk.talk_post_no as post_no, (select user_id  from tb_user u
                    	where u.user_no = tk.user_no ) user_id,
                    	(select user_name  from tb_user u
                    		where u.user_no = tk.user_no ) user_name,
		 				tk.talk_reg_dt as reg_dt, tk.talk_post_title as post_title,
		 				tk.talk_post_content as post_content, null as subject,
                     (select code_name from tb_codenm where code_name='자유게시판') code_name
                from tb_talk tk
	</sql>
	
	<!-- 전체 게시판 조회를 위한 쿼리 끝 -->


	<!-- 삭제 처리를 위한 프로시저 -->
	
	
	<sql id="procedureMakeStart">
		{call 

    		declare 

    			begin 
	</sql>
	<sql id="procedureMakeEnd">
				end
		}
	</sql>

	<!-- 삭제 처리를 위한 프로시저 끝 -->
	

	<resultMap type="Board" id="boardMap">
      <result column="user_no" property="userNo"/>
      <result column="post_no" property="postNo"/>
      <result column="user_id" property="userId"/>
      <result column="user_name" property="userName"/>
      <result column="post_title" property="postTitle"/>
      <result column="reg_dt" property="regDt"/>
      <result column="subject" property="subject"/>
      <result column="code_name" property="codeName"/>
    </resultMap>
    


	<select id="selectAllBoards" parameterType="Page" resultMap="boardMap" flushCache="true" useCache="true">
	     <include refid="pagingStart" />
	     	select * from (
        		select * from (
	     			<include refid="selectStudy" />
	     		 order by study_post_no desc) study 
	     		union all
	     		select * from (
	     			<include refid="selectVote" />
		 		 order by vote_no desc) vote
		 		union all
		 		select * from (
	     			<include refid="selectNotice" />
  			    order by notice_post_no desc) notice
  			    union all
  			    select * from (
	     			<include refid="selectTeam" />  			    
  			    order by team_board_no desc) team
  			    union all
  			    select * from ( 
  			        <include refid="selectYoutube" />
  			    order by yt_no desc) youtube
  			    union all
  			    select * from ( 
  			        <include refid="selectQna" />
  			    order by qna_no desc) qna  			        
  			    union all
  			    select * from ( 
  			        <include refid="selectTalk" />
  			    order by talk_post_no desc) talk  			        
	     		) allboard
         	   <where>
		      	   <if test="search.searchType != null">
			      	   <choose>
			               <when test="search.searchType == 'all'">
				               	and (post_title like '%'|| #{search.searchWord} ||'%'
				               	or post_content like '%'|| #{search.searchWord} ||'%')
			               </when>
			               <when test="search.searchType == 'title'"> 	
			               	and post_title like '%'|| #{search.searchWord} ||'%'  	
			               </when>
			               <when test="search.searchType == 'content'"> 	
			               	and post_content like '%'|| #{search.searchWord} ||'%'  	
			               </when>
			               <when test="search.searchType == 'userid'"> 	
			               	and user_id like '%'|| #{search.searchWord} ||'%'  	
			               </when>
			               <when test="search.searchType == 'username'"> 	
			               	and user_name like '%'|| #{search.searchWord} ||'%'  	
			               </when>
			            </choose>
			      	   
		      	   </if>
	      	   </where>
	     	   order by reg_dt desc

	     <include refid="pagingEnd" />

	</select>

	
	<select id="selectAllBoardsCount" resultType="int" parameterType="Search" flushCache="true" useCache="true">
	     	select count(*) from (
        		select * from (
	     			<include refid="selectStudy" />
	     		 			  ) study
	     		union all
	     		select * from (
	     			<include refid="selectVote" />
		 		 			  ) vote
		 		union all
		 		select * from (
	     			<include refid="selectNotice" />
  			    			 ) notice
		 		union all
		 		select * from (
	     			<include refid="selectTeam" />
  			    			 ) team
		 		union all
		 		select * from (
	     			<include refid="selectYoutube" />
  			    			 ) youtube
		 		union all
		 		select * from (
	     			<include refid="selectQna" />
  			    			 ) qna
		 		union all
		 		select * from (
	     			<include refid="selectTalk" />
  			    			 ) talk
	     		) allboard
	     		<where>
		      	   <if test="searchType != null">
			      	   <choose>
			               <when test="searchType == 'all'">
				               	and (post_title like '%'|| #{searchWord} ||'%'
				               	or post_content like '%'|| #{searchWord} ||'%')
			               </when>
			               <when test="searchType == 'title'"> 	
			               	and post_title like '%'|| #{searchWord} ||'%'  	
			               </when>
			               <when test="searchType == 'content'"> 	
			               	and post_content like '%'|| #{searchWord} ||'%'  	
			               </when>
			               <when test="searchType == 'userid'"> 	
			               	and user_id like '%'|| #{searchWord} ||'%'  	
			               </when>
			               <when test="searchType == 'username'"> 	
			               	and user_name like '%'|| #{searchWord} ||'%'  	
			               </when>
			            </choose>
			      	   
		      	   </if>
		      	</where>
	</select>
	
	<!-- 게시판 별로 따로보기 쿼리만 짰으니까 구현하세요. -->
	
	<select id="selectOneBoard" parameterType="hashmap" resultMap="boardMap" flushCache="true" useCache="true">
	     <include refid="pagingStart" />
	     select * from (
	     
	     	<choose>
	     		<when test="codeValue == 1">
		     		<include refid="selectTalk" />
	     		</when>
	     		<when test="codeValue == 2">
		     		<include refid="selectNotice" />
	     		</when>
	     		<when test="codeValue == 3">
		     		 <include refid="selectYoutube" />
	     		</when>
	     		<when test="codeValue == 4">
		     		<include refid="selectTeam" />  			    
	     		</when>
	     		<when test="codeValue == 5">
		     		<include refid="selectVote" />
	     		</when>
	     		<when test="codeValue == 6">
		     		<include refid="selectStudy" />
	     		</when>
	     		<when test="codeValue == 7">
		     		<include refid="selectQna" />
	     		</when>
	     	</choose>
	     	)
      	   <if test="search.searchType != null">
      	   <where>
      	   
	      	   <choose>
	               <when test="search.searchType == 'all'">
		               	and (post_title like '%'|| #{search.searchWord} ||'%'
		               	or post_content like '%'|| #{search.searchWord} ||'%')
	               </when>
	               <when test="search.searchType == 'title'"> 	
	               	and post_title like '%'|| #{search.searchWord} ||'%'  	
	               </when>
	               <when test="search.searchType == 'content'"> 	
	               	and post_content like '%'|| #{search.searchWord} ||'%'  	
	               </when>
	               <when test="search.searchType == 'userid'"> 	
	               	and user_id like '%'|| #{search.searchWord} ||'%'  	
	               </when>
	               <when test="search.searchType == 'username'"> 	
	               	and user_name like '%'|| #{search.searchWord} ||'%'  	
	               </when>
	            </choose>
	        </where>    
      	   </if>
	     	order by reg_dt desc
	     <include refid="pagingEnd" />

	</select>
	
	<select id="selectOneBoardCount" resultType="int" parameterType="hashmap" flushCache="true" useCache="true">
	select count(*)
	  from (
	     	<choose>
	     		<when test="codeValue == 1">
		     		<include refid="selectTalk" />
	     		</when>
	     		<when test="codeValue == 2">
		     		<include refid="selectNotice" />
	     		</when>
	     		<when test="codeValue == 3">
		     		 <include refid="selectYoutube" />
	     		</when>
	     		<when test="codeValue == 4">
		     		<include refid="selectTeam" />  			    
	     		</when>
	     		<when test="codeValue == 5">
		     		<include refid="selectVote" />
	     		</when>
	     		<when test="codeValue == 6">
		     		<include refid="selectStudy" />
	     		</when>
	     		<when test="codeValue == 7">
		     		<include refid="selectQna" />
	     		</when>
	     	</choose>
	     	)
     		<where>
	      	   <if test="search.searchType != null">
		      	   <choose>
		               <when test="search.searchType == 'all'">
			               	and post_title like '%'|| #{search.searchWord} ||'%'
			               	or post_content like '%'|| #{search.searchWord} ||'%'
		               </when>
		               <when test="search.searchType == 'title'"> 	
		               	and post_title like '%'|| #{search.searchWord} ||'%'  	
		               </when>
		               <when test="search.searchType == 'content'"> 	
		               	and post_content like '%'|| #{search.searchWord} ||'%'  	
		               </when>
		               <when test="search.searchType == 'userid'"> 	
		               	and user_id like '%'|| #{search.searchWord} ||'%'  	
		               </when>
		               <when test="search.searchType == 'username'"> 	
		               	and user_name like '%'|| #{search.searchWord} ||'%'  	
		               </when>
		            </choose>
		      	   
	      	   </if>
	      	</where>
	</select>
    
    <!-- 선택 게시판 삭제 -->
    <delete id="delSelBoard" parameterType="Map">
    	<include refid="procedureMakeStart" />
    		delete
			  from tb_comment
			 where (code_value, board_post_no) in (
	    	<foreach item="value" index="key" collection="_parameter.entrySet()" separator=",">
		    	<foreach item="items" collection="value" open="("  separator="),(" close=")">
		    	#{key}, #{items} 
		   		</foreach>
	   		</foreach>
	   		);
			delete
			  from tb_like
			 where (code_value, board_post_no) in (   
			<foreach item="value" index="key" collection="_parameter.entrySet()" separator=",">
		    	<foreach item="items" collection="value" open="("  separator="),(" close=")">
		    	#{key}, #{items} 
		   		</foreach>
	   		</foreach>  	
			);
    		delete
			  from tb_file
			 where (code_value, board_post_no) in (
    		<foreach item="value" index="key" collection="_parameter.entrySet()" separator=",">
		    	<foreach item="items" collection="value" open="("  separator="),(" close=")">
		    	#{key}, #{items} 
		   		</foreach>
	   		</foreach>  
    		);
		<foreach item="value" index="key" collection="_parameter.entrySet()">
    		<choose>
	    		<when test="key == 1">
	    		delete 
				  from tb_talk
				 where talk_post_no in (	
	        	 <foreach item="items" collection="value" separator=",">
					    	#{items} 
				 </foreach>
	        	);
	    		</when>
	    		<when test="key == 2">
	    		delete 
				  from tb_notice
				 where notice_post_no in (
	        	 <foreach item="items" collection="value" separator=",">
					    	#{items} 
				 </foreach>
	        	); 
	    		</when>
	    		<when test="key == 3">
	    		delete 
				  from tb_youtube
				 where yt_no in (
	        	 <foreach item="items" collection="value" separator=",">
					    	#{items} 
				 </foreach>
	        	); 
	    		</when>
	    		<when test="key == 4">
	    		delete 
				  from tb_team
				 where team_board_no in (
	        	 <foreach item="items" collection="value" separator=",">
					    	#{items} 
				 </foreach>
	        	);
	    		</when>
	    		<when test="key == 5">
	    		delete 
				  from tb_vote
				 where vote_no in (
	        	 <foreach item="items" collection="value" separator=",">
					    	#{items} 
				 </foreach>
	        	);
	    		</when>
	    		<when test="key == 6">
	    		delete 
				  from tb_study
				 where study_post_no in (
	        	 <foreach item="items" collection="value" separator=",">
					    	#{items} 
				 </foreach>
	        	);
	    		</when>
	    		<when test="key == 7">
	    		delete 
				  from tb_qna
				 where qna_no in (
	        	 <foreach item="items" collection="value" separator=",">
					    	#{items} 
				 </foreach>
	        	);
	    		</when>
	   		</choose>
   		</foreach>
    	
    	<include refid="procedureMakeEnd" />

    </delete>
	
	<!-- 선택 게시판 삭제 끝 -->
	
	<!-- 선택 게시판 전체 삭제 -->
		
	<delete id="delSelAllBoard" parameterType="int">
		
		<include refid="procedureMakeStart" />
    	
    		delete
			  from tb_comment
			 where code_value = #{delBoardTypeNo};
    	
    		delete
			  from tb_like
			 where code_value = #{delBoardTypeNo};
    	
    		delete
			  from tb_file
			 where code_value = #{delBoardTypeNo};
    	<choose>
    	
	    		<when test="delBoardTypeNo == 1">
	    		delete 
		  		  from tb_talk;
	    		</when>
	    		<when test="delBoardTypeNo == 2">
	    		delete 
		  		  from tb_notice;
	    		</when>
	    		<when test="delBoardTypeNo == 3">
	    		delete 
		  		  from tb_youtube;
	    		</when>
	    		<when test="delBoardTypeNo == 4">
	    		delete 
		  		  from tb_team;
	    		</when>
	    		<when test="delBoardTypeNo == 5">
	    		delete 
		  		  from tb_vote;
	    		</when>
	    		<when test="delBoardTypeNo == 6">
	    	    delete 
		  		  from tb_study;
	    		</when>
	    		<when test="delBoardTypeNo == 7">
	    		 delete 
		  		  from tb_qna;
	    		</when>
	   		</choose>
    	<include refid="procedureMakeEnd" />
		

	</delete>
    <!-- 선택 게시판 전체 삭제 끝 -->
    
    <!-- 전체 게시판 삭제 -->
    <delete id="delAllBoard">
		
		<include refid="procedureMakeStart" />
    	 	delete
			  from tb_comment;
			  
			delete
			  from tb_like;  
    	
    		delete
			  from tb_file;
    	
    		delete
			  from tb_talk;
			  
    		delete
			  from tb_notice;
			  
    		delete
			  from tb_youtube;
			  
    		delete
			  from tb_team;
			  
    		delete
			  from tb_vote;
			  
    		delete
			  from tb_study;
			  
    		delete
			  from tb_qna;
			  
    	<include refid="procedureMakeEnd" />
		

	</delete>
	
	<!-- 전체 게시판 삭제 끝 -->
    
    
    
    
</mapper>	














