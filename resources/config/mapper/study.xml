<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="kr.co.bitcomu.repository.dao.StudyDAO">
	<resultMap type="Study" id="studyMap">
		<result column="study_post_no" property="studyPostNo"/>
		<result column="user_no" property="userNo"/>
		<result column="study_recruit_enabled" property="studyRecruitEnabled"/>
		<result column="study_post_title" property="studyPostTitle"/>
		<result column="study_view_cnt" property="studyViewCnt"/>
		<result column="study_loc" property="studyLoc"/>
		<result column="study_recruit_mem_min" property="studyRecruitMemMin"/>
		<result column="study_recruit_mem_max" property="studyRecruitMemMax"/>
		<result column="study_recruit_field" property="studyRecruitField"/>
		<result column="study_post_content" property="studyPostContent"/>
		<result column="study_reg_dt" property="studyRegDt"/>
		<result column="user_id" property="userId"/>
		<result column="study_cmt_cnt" property="studyCmtCnt"/>
	</resultMap>
	<resultMap id="commentMap" type="Comment">
			<result column="cmt_no" property="cmtNo"/>
			<result column="user_no" property="userNo"/>
			<result column="board_post_no" property="boardPostNo"/>
			<result column="cmt_content" property="cmtContent"/>
			<result column="cmt_reg_dt" property="cmtRegDt"/>
			<result column="code_value" property="codeValue"/>
			<result column="user_id" property="userId"/>
			<result column="parent_cmt_no" property="parentCmtNo"/>
			<result column="cmt_group_no" property="cmtGroupNo"/>
	</resultMap>
		
	<sql id="selectStudy">
		select s.study_post_no, s.user_no, 
				(select user_id from tb_user u 
						where u.user_no = s.user_no ) as user_id ,
				s.study_recruit_enabled, s.study_post_title, s.study_view_cnt, s.study_loc, s.study_recruit_mem_min,
				s.study_recruit_mem_max, s.study_recruit_field, s.study_post_content, to_char(s.study_reg_dt, 'YYYY-MM-DD HH24:MI') study_reg_dt,
				(select count(*) 
			    		from tb_comment c
			    		where code_value = (select code_value from tb_codenm where code_name = '스터디게시판')
			        	and c.board_post_no = s.study_post_no ) as study_cmt_cnt     
			from tb_study s
	</sql>
	
	<!-- 스터디게시판 전체목록 조회 -->
	<select id="selectStudyList" parameterType="hashMap" resultMap="studyMap">
		 select *
		 	from (select rownum rnum, a.* from 
		 			( <include refid="selectStudy" />
						
						<choose>
							<when test="search.searchType == '' and search.searchWord != ''">
							 where s.study_post_content like '%'||#{search.searchWord}||'%'
								or s.study_post_title like '%'||#{search.searchWord}||'%'
								or s.study_loc like '%'||#{search.searchWord}||'%'
							</when>
							<when test="search.searchType != ''">
							 where s.study_recruit_field = #{search.searchType} 
								and (s.study_post_content like '%'||#{search.searchWord}||'%' 
									or s.study_post_title like '%'||#{search.searchWord}||'%'
									or s.study_loc like '%'||#{search.searchWord}||'%')
							</when>
						
						</choose>
						
						
						order by STUDY_RECRUIT_ENABLED desc, study_post_no desc) a )
						where rnum between #{page.begin} and #{page.end}
	</select>
	
	
	
	<!-- 스터디게시판 게시글 조회 -->
	<select id="selectOneStudy" parameterType="int" resultMap="studyMap">
		<include refid="selectStudy" />
			where study_post_no = #{studyPostNo}
	</select>
	
	<!-- 스터디게시판 글 작성 -->
	<insert id="insertStudy" parameterType="Study">
		insert into tb_study (study_post_no, user_no, study_recruit_enabled, study_post_title,  study_loc, study_recruit_mem_min, 
							study_recruit_mem_max, study_recruit_field, study_post_content)
				values (tb_study_seq.nextval, #{userNo}, #{studyRecruitEnabled}, #{studyPostTitle},  #{studyLoc}, 
						#{studyRecruitMemMin},#{studyRecruitMemMax}, #{studyRecruitField}, #{studyPostContent})
	</insert>
	
	<!-- 스터디게시판 글 수정 -->
	<update id="updateStudy" parameterType="Study">
		update tb_study 
   			 set study_recruit_enabled = #{studyRecruitEnabled}, 
      			 study_post_title = #{studyPostTitle},
       			 study_loc = #{studyLoc}, 
        		 study_recruit_mem_min = #{studyRecruitMemMin}, 
        		 study_recruit_mem_max = #{studyRecruitMemMax}, 
        		 study_recruit_field = #{studyRecruitField}, 
        		 study_post_content = #{studyPostContent}
    	where study_post_no = #{studyPostNo}
	</update>
	
	<!-- 스터디 게시판 글 삭제 -->
	<delete id="deleteStudy" parameterType="int">
		delete from tb_study
			where study_post_no = #{studyPostNo}
	</delete>
	
	<!-- 스터디게시판 조회수 증가 -->
	<update id="updateViewCnt" parameterType="int">
		update tb_study
			set study_view_cnt = study_view_cnt + 1
			where study_post_no = #{studyPostNo}
	</update>
	
	<!-- 스터디게시판 댓글 조회 -->
	<select id="selectCommentList" parameterType="int" resultMap="commentMap" >

		select c.*, (select user_id from tb_user u
						where user_no = c.user_no ) as user_id 
						from tb_comment c
						where board_post_no = #{studyPostNo} 
						and code_value = (select code_value from tb_codenm where code_name = '스터디게시판')
						order by cmt_group_no, cmt_no
	</select>
	
	
	
	<!-- 스터디게시판 댓글 입력 -->
	<insert id="insertComment" parameterType="Comment">
		insert into tb_comment (cmt_no, user_no, board_post_no, cmt_content, code_value, cmt_group_no)
				values (tb_comment_seq.nextval, #{userNo}, #{boardPostNo}, #{cmtContent}, 
						(select code_value from tb_codenm where code_name = '스터디게시판'), tb_cmt_group.nextval)
	</insert>
	
	<!-- 스터디게시판 대댓글 입력 -->
	<insert id="insertReComment" parameterType="Comment">
		insert into tb_comment (cmt_no, user_no, board_post_no, cmt_content, code_value, parent_cmt_no, cmt_group_no)
				values (tb_comment_seq.nextval, #{userNo}, #{boardPostNo}, #{cmtContent}, 
						(select code_value from tb_codenm where code_name = '스터디게시판'), 
						#{parentCmtNo}, (select cmt_group_no from tb_comment where cmt_no = #{parentCmtNo}))
	</insert> 

		
	<!-- 스터디게시판 댓글 수정 -->
	<update id="updateComment" parameterType="Comment">
		update tb_comment
			set cmt_content = #{cmtContent}
			where cmt_no = #{cmtNo}
	</update>
	<!-- 스터디게시판 댓글 삭제 -->
	<delete id="deleteComment" parameterType="hashMap">
		delete from tb_comment
			<choose>
				<when test="parentCmtNo == 0">
				where cmt_group_no = (select cmt_group_no from tb_comment where cmt_no = #{cmtNo})
				</when>
				<when test="parentCmtNo != 0">
					where cmt_no = #{cmtNo}
				</when>
			</choose>
			
	</delete>
	
	<!-- 스터디게시판 댓글 수 -->
	<select id="studyCmtCnt" parameterType="int" resultType="int">
		select count(*) 
    		from tb_comment 
    		where code_value = (select code_value from tb_codenm where code_name = '스터디게시판')
        	and board_post_no = #{studyPostNo}
	</select>
	
	<!-- 메인화면 스터디게시판 글 -->
	<select id="mainStudyPost" resultMap="studyMap">
		select rownum , s.* from tb_study s
		    where rownum between 1 and 4
		    order by STUDY_RECRUIT_ENABLED desc, study_post_no desc	
	</select>
	
</mapper>