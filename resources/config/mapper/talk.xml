<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.bitcomu.repository.dao.TalkDAO">
	<resultMap id="talkMap" type="Talk">
		<result column="talk_post_no" property="postNo" />
		<result column="talk_post_title" property="title" />
		<result column="talk_post_content" property="content" />
		<result column="user_id" property="userId" />
		<result column="user_no" property="userNo" />
		<result column="talk_view_cnt" property="viewCnt" />
		<result column="talk_reg_dt" property="regDt" />
	</resultMap>
	<select id="selectTalk" parameterType="Page" resultMap="talkMap">
		select *
	      from (select rownum rnum, a.*
			      from ( 
					      select n.*, (select user_id  from tb_user u where u.user_no = n.user_no ) as user_id 
                            from tb_talk n
						   order by talk_post_no desc
						  )
						  a)
		 where rnum between #{begin} and #{end} 
	</select>
	<select id="selectTalkCount" resultType="int">
		select count(*)
		  from tb_talk
	</select>
	
	
	<select id="selectOneTalk" parameterType="int" resultMap="talkMap">
		select n.*, (select user_id  from tb_user u where u.user_no = n.user_no ) as user_id 
          from tb_talk n
		 where talk_post_no = #{postNo} 
	</select>
	<insert id="insertTalk" parameterType="Talk">
		insert into tb_talk (
			talk_post_no, talk_post_title, talk_post_content, user_no
		) values (
			tb_talk_seq.nextval, #{title},  #{content}, #{userNo}
		)
	</insert>
	<update id="updateViewCnt" parameterType="int">
		update tb_talk 
		   set talk_view_cnt = talk_view_cnt + 1
		 where talk_post_no = #{postNo}
	</update>
	<update id="updateTalk" parameterType="Talk">
		update tb_talk 
		   set talk_post_title = #{title}, 
		       talk_post_content = #{content}
		 where talk_post_no = #{postNo}
	</update>
	<delete id="deleteTalk" parameterType="int">
		delete 
		  from tb_talk 
		 where talk_post_no = #{postNo}
	</delete>
	
	<!-- 	댓글테이블  파트 ================================== -->
	<resultMap id="commentMap" type="Comment">
		<result column="cmt_no" property="cmtNo" />
		<result column="user_no" property="userNo" />
		<result column="user_id" property="userId" />
		<result column="board_post_no" property="boardPostNo" />
		<result column="cmt_content" property="cmtContent" />
		<result column="cmt_reg_dt" property="cmtRegDt" />
		<result column="code_value" property="codeValue" />
	</resultMap>
	
	<select id="selectComment" parameterType="int" resultMap="commentMap" flushCache="true" useCache="true">
	    select *
	      from (select rownum rnum, a.*
			      from (
					    select n.*, (select user_id  from tb_user u where u.user_no = n.user_no ) as user_id 
					      from tb_comment n
					     where board_post_no = #{no}
					       and code_value = 1
		     			 order by cmt_no 
	     							)
						  a)
		 where rnum between #{begin} and #{end} 
	</select>	
	<select id="selectTalkCmtCount" resultType="int">
		select count(*)
		  from tb_comment
		   where board_post_no = #{no}
	       and code_value = 1
	     order by cmt_no 
	</select>
	
	
	<insert id="insertComment" parameterType="Comment">
		insert into tb_comment(
			cmt_no, user_no, board_post_no, cmt_content, code_value
		) values (
			tb_comment_seq.nextVal, #{userNo}, #{boardPostNo}, #{cmtContent}, 1
		)
	</insert>	
			
	<delete id="deleteComment" parameterType="int">
	    delete 
	      from tb_comment
	     where cmt_no = #{cmtNo}
	       and code_value = 1
	</delete>	
	
	<update id="updateComment" parameterType="Comment">
	    update tb_comment
	       set cmt_content = #{cmtContent}
	     where cmt_no = #{cmtNo}
	       and code_value = 1
	</update>
</mapper>






















