<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.bitcomu.repository.dao.NoticeDAO">
	<resultMap id="noticeMap" type="Notice">
		<result column="notice_post_no" property="postNo" />
		<result column="notice_post_title" property="title" />
		<result column="notice_post_content" property="content" />
		<result column="user_no" property="userNo" />
		<result column="user_id" property="userId" />
		<result column="notice_view_cnt" property="viewCnt" />
		<result column="notice_reg_dt" property="regDt" />
	</resultMap>
	
	
	
	<select id="selectNotice" parameterType="hashmap" resultMap="noticeMap">
	    select *
	      from (
	      		select rownum rnum, a.*
			      from ( 
			      		 select n.*, (select user_id  from tb_user u where u.user_no = n.user_no ) as user_id 
                           from tb_notice n
						  order by notice_post_no desc
						)a
		  <choose>
			<when test="search.searchType == 'user'">
				where user_id like '%' || #{search.searchWord} || '%'
			</when>
			<when test="search.searchType == 'titleContent'"> 
                  	where  notice_POST_title like '%' || #{search.searchWord} || '%'
                  	   or notice_POST_content like '%' || #{search.searchWord} || '%'
			</when>
			<when test="search.searchType == 'content'">
				where notice_POST_content like '%' || #{search.searchWord} || '%'
			</when >
			<when test="search.searchType == 'title'">
				where notice_POST_title like '%' || #{search.searchWord} || '%'
			</when >
			<otherwise>
			</otherwise>
          </choose>
				)
		 where rnum between #{page.begin} and #{page.end}  			 
	</select>
	
	<select id="selectMainNotice" resultMap="noticeMap">
	 select *
	      from (
	      		select rownum rnum, a.*
			      from ( 
			      		 select n.*, (select user_id  from tb_user u where u.user_no = n.user_no ) as user_id 
                           from tb_notice n
						  order by notice_post_no desc
						)a
					)
		where rnum between 1 and 7
	</select>
	
	
	<select id="selectNoticeCount" parameterType="hashmap" resultType="int">
		select count(*)
		  from (select n.*, (select user_id  from tb_user u where u.user_no = n.user_no ) as user_id 
                            from tb_notice n)
	  	 <choose>
			<when test="search.searchType == 'user'">
				where user_id like '%' || #{search.searchWord} || '%'
			</when>
			<when test="search.searchType == 'titleContent'"> 
	                 	where notice_POST_title like '%' || #{search.searchWord} || '%'
	                 	   or notice_POST_content like '%' || #{search.searchWord} || '%'
			</when>
			<when test="search.searchType == 'content'">
				where notice_POST_content like '%' || #{search.searchWord} || '%'
			</when >
			<when test="search.searchType == 'title'">
				where notice_POST_title like '%' || #{search.searchWord} || '%'
			</when >
			<when test="search.searchType == null">
			</when >
			<otherwise>
			</otherwise>
         </choose>
	</select>
	

	
	<select id="selectOneNotice" parameterType="int" resultMap="noticeMap">
		select n.*, (select user_id  from tb_user u where u.user_no = n.user_no ) as user_id 
                            from tb_notice n
		 where notice_post_no = #{postNo} 
	</select>
	<insert id="insertNotice" parameterType="Notice">
		insert into tb_notice (
			notice_post_no, notice_post_title, notice_post_content, user_no
		) values (
			tb_notice_seq.nextval, #{title}, #{content}, ${userNo}
		)
	</insert>
	<update id="updateViewCnt" parameterType="int">
		update tb_notice 
		   set notice_view_cnt = notice_view_cnt + 1
		 where notice_post_no = #{postNo}
	</update>
	<update id="updateNotice" parameterType="Notice" >
		update tb_notice 
		   set notice_post_title = #{title}, 
		       notice_post_content = #{content}
		 where notice_post_no = #{postNo}
	</update>
	<delete id="deleteNotice" parameterType="int">
		delete 
		  from tb_notice 
		 where notice_post_no = #{postNo}
	</delete>

</mapper>