<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.bitcomu.repository.dao.TeamDAO">
	<resultMap id="teamMap" type="Team">
		<result column="user_id" property="userId" /> 
		<result column="user_no" property="userNo" />
		<result column="user_birth" property="userBirth"/>
		<result column="team_no" property="teamNo" />
		<result column="code_value" property="codeValue"/>
		<result column="project_no" property="projectNo" />
		<result column="team_board_no" property="teamBoardNo" />
		<result column="team_board_title" property="teamBoardTitle" />
		<result column="team_board_content" property="teamBoardContent" />
		<result column="team_board_reg_dt" property="teamBoardRegDt" />
	</resultMap>
	
	<!-- 페이징 처리 시작 -->
	<sql id="pagingStart">
	  	    select *
	      from (select rownum rnum, a.*
			      from ( 
	</sql>
	<sql id="pagingEnd">
	  )
			    a)
		 where rnum between #{p.begin} and #{p.end}
	</sql>
	
	<!-- infinity scroll 위한 전체 게시글 수 -->
	<select id="selectBoardCount" resultType="int">
		select count(*)
	  	  from tb_team

	</select>
	
	<!-- 추가 / 삭제된 후의 팀 갯수 조회-->
	<select id="selectTeamCode" resultType="int" flushCache="true" useCache="true">
		select code_value
		  from tb_codenm
		 where code_name = '팀갯수'
	</select>
	
	<!-- 팀 추가 / 삭제 -->
	<update id="updateTeamCode" parameterType="Team">
		update tb_codenm  
		   set code_value = #{codeValue}
		 where code_name = '팀갯수'
	</update>
	
	<!-- 생일자 출력 위한 쿼리 -->
	<select id="userBirthDday" resultMap="teamMap" flushCache="true" useCache="true">
		select user_birth
  		  from tb_user
	</select>

	<select id="selectTeamBoard" parameterType="Map" resultMap="teamMap" flushCache="true" useCache="true">
		
		<include refid="pagingStart" />
		select t.*, (select user_id  
					   from tb_user u
                      where u.user_no = t.user_no ) as user_id
          from tb_team t
         where project_no = #{t.projectNo}
           and team_no = #{t.teamNo}
         order by team_board_no desc
		<include refid="pagingEnd" />
	</select>

	<select id="selectOneTeamBoard" parameterType="int" resultMap="teamMap" flushCache="true" useCache="true">
		select t.*, (select user_id  
					   from tb_user u
                      where u.user_no = t.user_no ) as user_id
          from tb_team t
		 where team_board_no = #{teamBoardNo}
	</select>
	
	<insert id="insertTeamBoard" parameterType="Team">
		insert into tb_team(
			team_board_no, project_no, team_no, team_board_title, user_no, team_board_content
		) values (
			tb_team_seq.nextval, #{projectNo}, #{teamNo}, #{teamBoardTitle}, #{userNo}, #{teamBoardContent}
		)
	</insert>

	<update id="updateTeamBoard" parameterType="Team">
		update tb_team  
		   set team_board_title = #{teamBoardTitle},
			   team_no = #{teamNo}, 
			   project_no = #{projectNo}, 
			   team_board_content = #{teamBoardContent}
		 where team_board_no = #{teamBoardNo}
<!-- 		   and user_no = #{userNo} -->
	</update>

	<delete id="deleteTeamBoard" parameterType="int">
		delete 
		  from tb_team 
		 where team_board_no = #{teamBoardNo}
<!-- 		   and user_no = #{userNo} -->
	</delete>

	<delete id="deleteboardcomment" parameterType="int">
		delete 
		  from tb_comment 
		 where board_post_no = #{teamBoardNo}
		   and code_value = (select code_value 
		   					   from tb_codenm 
		   					  where code_name = '팀프로젝트게시판')
		   
	</delete>

<!-- ===댓글================================================= -->

	<resultMap id="commentMap" type="Comment">
		<result column="user_no" property="userNo" />
		<result column="user_id" property="userId" />
		<result column="board_post_no" property="boardPostNo" />
		<result column="cmt_no" property="cmtNo" />
		<result column="cmt_content" property="cmtContent" />
		<result column="cmt_reg_dt" property="cmtRegDt" />
		<result column="code_value" property="codeValue" />
	</resultMap>
	
	<select id="selectTeamComment" parameterType="int" resultMap="commentMap">
		select c.*, (select user_id  
					   from tb_user u
                      where u.user_no = c.user_no ) as user_id
          from tb_comment c
		 where board_post_no = #{teamBoardNo}
		   and code_value = (select code_value from tb_codenm where code_name = '팀프로젝트게시판')
		 order by cmt_no desc
	</select>

	<insert id="insertTeamComment" parameterType="Comment">
		insert into tb_comment(
			cmt_no, user_no, board_post_no, cmt_content, code_value
		) values (
			tb_comment_seq.nextval, #{userNo}, #{boardPostNo}, #{cmtContent}, (select code_value from tb_codenm where code_name = '팀프로젝트게시판')
		)
	</insert>

	<update id="updateTeamComment" parameterType="Comment">
		update tb_comment  
		   set cmt_content = #{cmtContent}
		 where cmt_no = #{cmtNo}
	</update>

	<delete id="deleteTeamComment" parameterType="int">
		delete 
		  from tb_comment 
		 where cmt_no = #{cmtNo}
	</delete>
	
<!-- ===파일================================================= -->
	
</mapper>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	